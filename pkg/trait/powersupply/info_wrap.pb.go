// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package powersupply

import (
	context "context"
	traits "github.com/smart-core-os/sc-api/go/traits"
	grpc "google.golang.org/grpc"
)

// Wrap Info	adapts a traits.PowerSupplyInfoServer	and presents it as a traits.PowerSupplyInfoClient
func WrapInfo(server traits.PowerSupplyInfoServer) traits.PowerSupplyInfoClient {
	return &infoWrapper{server}
}

type infoWrapper struct {
	server traits.PowerSupplyInfoServer
}

// compile time check that we implement the interface we need
var _ traits.PowerSupplyInfoClient = (*infoWrapper)(nil)

func (w *infoWrapper) DescribePowerCapacity(ctx context.Context, req *traits.DescribePowerCapacityRequest, _ ...grpc.CallOption) (*traits.PowerCapacitySupport, error) {
	return w.server.DescribePowerCapacity(ctx, req)
}

func (w *infoWrapper) DescribeDrawNotification(ctx context.Context, req *traits.DescribeDrawNotificationRequest, _ ...grpc.CallOption) (*traits.DrawNotificationSupport, error) {
	return w.server.DescribeDrawNotification(ctx, req)
}
